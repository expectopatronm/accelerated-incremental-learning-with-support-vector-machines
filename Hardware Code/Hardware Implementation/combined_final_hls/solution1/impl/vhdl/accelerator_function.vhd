-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerator_function is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    kernel_in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    kernel_in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    kernel_in_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    kernel_in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    kernel_in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    kernel_in_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    kernel_index_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_index_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    kernel_index_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    kernel_index_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    kernel_index_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    kernel_index_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    kernel_index_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    kernel_out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    kernel_out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    kernel_out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    kernel_out_stream_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    kernel_out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    kernel_out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    kernel_out_stream_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
    in_stream_predict_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_predict_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_predict_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_predict_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_predict_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_stream_predict_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    in_stream_predict_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    supp_vec_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    supp_vec_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    supp_vec_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    supp_vec_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    supp_vec_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    supp_vec_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    supp_vec_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    dual_coef_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    dual_coef_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    dual_coef_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    dual_coef_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    dual_coef_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dual_coef_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    dual_coef_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    out_stream_predict_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_predict_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_predict_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_predict_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_predict_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_predict_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_stream_predict_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
    kernel_index_stream_TVALID : IN STD_LOGIC;
    kernel_index_stream_TREADY : OUT STD_LOGIC;
    kernel_out_stream_TVALID : OUT STD_LOGIC;
    kernel_out_stream_TREADY : IN STD_LOGIC;
    dual_coef_stream_TVALID : IN STD_LOGIC;
    dual_coef_stream_TREADY : OUT STD_LOGIC;
    in_stream_predict_TVALID : IN STD_LOGIC;
    in_stream_predict_TREADY : OUT STD_LOGIC;
    out_stream_predict_TVALID : OUT STD_LOGIC;
    out_stream_predict_TREADY : IN STD_LOGIC;
    kernel_in_stream_TVALID : IN STD_LOGIC;
    kernel_in_stream_TREADY : OUT STD_LOGIC;
    supp_vec_stream_TVALID : IN STD_LOGIC;
    supp_vec_stream_TREADY : OUT STD_LOGIC );
end;


architecture behav of accelerator_function is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "accelerator_function,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=10.165420,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=300,HLS_SYN_DSP=124,HLS_SYN_FF=30477,HLS_SYN_LUT=40943,HLS_VERSION=2019_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal function_flag : STD_LOGIC_VECTOR (31 downto 0);
    signal length_x_kernel : STD_LOGIC_VECTOR (31 downto 0);
    signal tile_size_kernel : STD_LOGIC_VECTOR (31 downto 0);
    signal remaining_size_kernel : STD_LOGIC_VECTOR (31 downto 0);
    signal tile_count_predict : STD_LOGIC_VECTOR (31 downto 0);
    signal remainder_predict : STD_LOGIC_VECTOR (31 downto 0);
    signal dual_coeff_length : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc9_U0_ap_start : STD_LOGIC;
    signal Block_proc9_U0_ap_done : STD_LOGIC;
    signal Block_proc9_U0_ap_continue : STD_LOGIC;
    signal Block_proc9_U0_ap_idle : STD_LOGIC;
    signal Block_proc9_U0_ap_ready : STD_LOGIC;
    signal Block_proc9_U0_kernel_index_stream_TREADY : STD_LOGIC;
    signal Block_proc9_U0_kernel_out_stream_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc9_U0_kernel_out_stream_TVALID : STD_LOGIC;
    signal Block_proc9_U0_kernel_out_stream_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc9_U0_kernel_out_stream_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc9_U0_kernel_out_stream_TUSER : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc9_U0_kernel_out_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc9_U0_kernel_out_stream_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_proc9_U0_kernel_out_stream_TDEST : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_proc9_U0_dual_coef_stream_TREADY : STD_LOGIC;
    signal Block_proc9_U0_in_stream_predict_TREADY : STD_LOGIC;
    signal Block_proc9_U0_out_stream_predict_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc9_U0_out_stream_predict_TVALID : STD_LOGIC;
    signal Block_proc9_U0_out_stream_predict_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc9_U0_out_stream_predict_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc9_U0_out_stream_predict_TUSER : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc9_U0_out_stream_predict_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc9_U0_out_stream_predict_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_proc9_U0_out_stream_predict_TDEST : STD_LOGIC_VECTOR (4 downto 0);
    signal Block_proc9_U0_kernel_in_stream_TREADY : STD_LOGIC;
    signal Block_proc9_U0_supp_vec_stream_TREADY : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_proc9_U0_start_full_n : STD_LOGIC;
    signal Block_proc9_U0_start_write : STD_LOGIC;

    component Block_proc9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        function_flag : IN STD_LOGIC_VECTOR (31 downto 0);
        tile_size_kernel : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_index_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_index_stream_TVALID : IN STD_LOGIC;
        kernel_index_stream_TREADY : OUT STD_LOGIC;
        kernel_index_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_index_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_index_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_index_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        kernel_index_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        kernel_index_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
        length_x_kernel : IN STD_LOGIC_VECTOR (31 downto 0);
        dual_coeff_length : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        kernel_out_stream_TVALID : OUT STD_LOGIC;
        kernel_out_stream_TREADY : IN STD_LOGIC;
        kernel_out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        kernel_out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        kernel_out_stream_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
        kernel_out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        kernel_out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        kernel_out_stream_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
        dual_coef_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        dual_coef_stream_TVALID : IN STD_LOGIC;
        dual_coef_stream_TREADY : OUT STD_LOGIC;
        dual_coef_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        dual_coef_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        dual_coef_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        dual_coef_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        dual_coef_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        dual_coef_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
        tile_count_predict : IN STD_LOGIC_VECTOR (31 downto 0);
        in_stream_predict_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        in_stream_predict_TVALID : IN STD_LOGIC;
        in_stream_predict_TREADY : OUT STD_LOGIC;
        in_stream_predict_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_predict_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_predict_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_predict_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_stream_predict_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        in_stream_predict_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
        remaining_size_kernel : IN STD_LOGIC_VECTOR (31 downto 0);
        out_stream_predict_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_stream_predict_TVALID : OUT STD_LOGIC;
        out_stream_predict_TREADY : IN STD_LOGIC;
        out_stream_predict_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_predict_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_predict_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_predict_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_stream_predict_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        out_stream_predict_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
        kernel_in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_in_stream_TVALID : IN STD_LOGIC;
        kernel_in_stream_TREADY : OUT STD_LOGIC;
        kernel_in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_in_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        kernel_in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        kernel_in_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
        remainder_predict : IN STD_LOGIC_VECTOR (31 downto 0);
        supp_vec_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        supp_vec_stream_TVALID : IN STD_LOGIC;
        supp_vec_stream_TREADY : OUT STD_LOGIC;
        supp_vec_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        supp_vec_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        supp_vec_stream_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        supp_vec_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        supp_vec_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        supp_vec_stream_TDEST : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component accelerator_function_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        function_flag : OUT STD_LOGIC_VECTOR (31 downto 0);
        length_x_kernel : OUT STD_LOGIC_VECTOR (31 downto 0);
        tile_size_kernel : OUT STD_LOGIC_VECTOR (31 downto 0);
        remaining_size_kernel : OUT STD_LOGIC_VECTOR (31 downto 0);
        tile_count_predict : OUT STD_LOGIC_VECTOR (31 downto 0);
        remainder_predict : OUT STD_LOGIC_VECTOR (31 downto 0);
        dual_coeff_length : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    accelerator_function_CONTROL_BUS_s_axi_U : component accelerator_function_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        function_flag => function_flag,
        length_x_kernel => length_x_kernel,
        tile_size_kernel => tile_size_kernel,
        remaining_size_kernel => remaining_size_kernel,
        tile_count_predict => tile_count_predict,
        remainder_predict => remainder_predict,
        dual_coeff_length => dual_coeff_length);

    Block_proc9_U0 : component Block_proc9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc9_U0_ap_start,
        ap_done => Block_proc9_U0_ap_done,
        ap_continue => Block_proc9_U0_ap_continue,
        ap_idle => Block_proc9_U0_ap_idle,
        ap_ready => Block_proc9_U0_ap_ready,
        function_flag => function_flag,
        tile_size_kernel => tile_size_kernel,
        kernel_index_stream_TDATA => kernel_index_stream_TDATA,
        kernel_index_stream_TVALID => kernel_index_stream_TVALID,
        kernel_index_stream_TREADY => Block_proc9_U0_kernel_index_stream_TREADY,
        kernel_index_stream_TSTRB => kernel_index_stream_TSTRB,
        kernel_index_stream_TKEEP => kernel_index_stream_TKEEP,
        kernel_index_stream_TUSER => kernel_index_stream_TUSER,
        kernel_index_stream_TLAST => kernel_index_stream_TLAST,
        kernel_index_stream_TID => kernel_index_stream_TID,
        kernel_index_stream_TDEST => kernel_index_stream_TDEST,
        length_x_kernel => length_x_kernel,
        dual_coeff_length => dual_coeff_length,
        kernel_out_stream_TDATA => Block_proc9_U0_kernel_out_stream_TDATA,
        kernel_out_stream_TVALID => Block_proc9_U0_kernel_out_stream_TVALID,
        kernel_out_stream_TREADY => kernel_out_stream_TREADY,
        kernel_out_stream_TKEEP => Block_proc9_U0_kernel_out_stream_TKEEP,
        kernel_out_stream_TSTRB => Block_proc9_U0_kernel_out_stream_TSTRB,
        kernel_out_stream_TUSER => Block_proc9_U0_kernel_out_stream_TUSER,
        kernel_out_stream_TLAST => Block_proc9_U0_kernel_out_stream_TLAST,
        kernel_out_stream_TID => Block_proc9_U0_kernel_out_stream_TID,
        kernel_out_stream_TDEST => Block_proc9_U0_kernel_out_stream_TDEST,
        dual_coef_stream_TDATA => dual_coef_stream_TDATA,
        dual_coef_stream_TVALID => dual_coef_stream_TVALID,
        dual_coef_stream_TREADY => Block_proc9_U0_dual_coef_stream_TREADY,
        dual_coef_stream_TSTRB => dual_coef_stream_TSTRB,
        dual_coef_stream_TKEEP => dual_coef_stream_TKEEP,
        dual_coef_stream_TUSER => dual_coef_stream_TUSER,
        dual_coef_stream_TLAST => dual_coef_stream_TLAST,
        dual_coef_stream_TID => dual_coef_stream_TID,
        dual_coef_stream_TDEST => dual_coef_stream_TDEST,
        tile_count_predict => tile_count_predict,
        in_stream_predict_TDATA => in_stream_predict_TDATA,
        in_stream_predict_TVALID => in_stream_predict_TVALID,
        in_stream_predict_TREADY => Block_proc9_U0_in_stream_predict_TREADY,
        in_stream_predict_TSTRB => in_stream_predict_TSTRB,
        in_stream_predict_TKEEP => in_stream_predict_TKEEP,
        in_stream_predict_TUSER => in_stream_predict_TUSER,
        in_stream_predict_TLAST => in_stream_predict_TLAST,
        in_stream_predict_TID => in_stream_predict_TID,
        in_stream_predict_TDEST => in_stream_predict_TDEST,
        remaining_size_kernel => remaining_size_kernel,
        out_stream_predict_TDATA => Block_proc9_U0_out_stream_predict_TDATA,
        out_stream_predict_TVALID => Block_proc9_U0_out_stream_predict_TVALID,
        out_stream_predict_TREADY => out_stream_predict_TREADY,
        out_stream_predict_TKEEP => Block_proc9_U0_out_stream_predict_TKEEP,
        out_stream_predict_TSTRB => Block_proc9_U0_out_stream_predict_TSTRB,
        out_stream_predict_TUSER => Block_proc9_U0_out_stream_predict_TUSER,
        out_stream_predict_TLAST => Block_proc9_U0_out_stream_predict_TLAST,
        out_stream_predict_TID => Block_proc9_U0_out_stream_predict_TID,
        out_stream_predict_TDEST => Block_proc9_U0_out_stream_predict_TDEST,
        kernel_in_stream_TDATA => kernel_in_stream_TDATA,
        kernel_in_stream_TVALID => kernel_in_stream_TVALID,
        kernel_in_stream_TREADY => Block_proc9_U0_kernel_in_stream_TREADY,
        kernel_in_stream_TSTRB => kernel_in_stream_TSTRB,
        kernel_in_stream_TKEEP => kernel_in_stream_TKEEP,
        kernel_in_stream_TUSER => kernel_in_stream_TUSER,
        kernel_in_stream_TLAST => kernel_in_stream_TLAST,
        kernel_in_stream_TID => kernel_in_stream_TID,
        kernel_in_stream_TDEST => kernel_in_stream_TDEST,
        remainder_predict => remainder_predict,
        supp_vec_stream_TDATA => supp_vec_stream_TDATA,
        supp_vec_stream_TVALID => supp_vec_stream_TVALID,
        supp_vec_stream_TREADY => Block_proc9_U0_supp_vec_stream_TREADY,
        supp_vec_stream_TSTRB => supp_vec_stream_TSTRB,
        supp_vec_stream_TKEEP => supp_vec_stream_TKEEP,
        supp_vec_stream_TUSER => supp_vec_stream_TUSER,
        supp_vec_stream_TLAST => supp_vec_stream_TLAST,
        supp_vec_stream_TID => supp_vec_stream_TID,
        supp_vec_stream_TDEST => supp_vec_stream_TDEST);




    Block_proc9_U0_ap_continue <= ap_const_logic_1;
    Block_proc9_U0_ap_start <= ap_start;
    Block_proc9_U0_start_full_n <= ap_const_logic_1;
    Block_proc9_U0_start_write <= ap_const_logic_0;
    ap_done <= Block_proc9_U0_ap_done;
    ap_idle <= Block_proc9_U0_ap_idle;
    ap_ready <= Block_proc9_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_proc9_U0_ap_done;
    ap_sync_ready <= Block_proc9_U0_ap_ready;
    dual_coef_stream_TREADY <= Block_proc9_U0_dual_coef_stream_TREADY;
    in_stream_predict_TREADY <= Block_proc9_U0_in_stream_predict_TREADY;
    kernel_in_stream_TREADY <= Block_proc9_U0_kernel_in_stream_TREADY;
    kernel_index_stream_TREADY <= Block_proc9_U0_kernel_index_stream_TREADY;
    kernel_out_stream_TDATA <= Block_proc9_U0_kernel_out_stream_TDATA;
    kernel_out_stream_TDEST <= Block_proc9_U0_kernel_out_stream_TDEST;
    kernel_out_stream_TID <= Block_proc9_U0_kernel_out_stream_TID;
    kernel_out_stream_TKEEP <= Block_proc9_U0_kernel_out_stream_TKEEP;
    kernel_out_stream_TLAST <= Block_proc9_U0_kernel_out_stream_TLAST;
    kernel_out_stream_TSTRB <= Block_proc9_U0_kernel_out_stream_TSTRB;
    kernel_out_stream_TUSER <= Block_proc9_U0_kernel_out_stream_TUSER;
    kernel_out_stream_TVALID <= Block_proc9_U0_kernel_out_stream_TVALID;
    out_stream_predict_TDATA <= Block_proc9_U0_out_stream_predict_TDATA;
    out_stream_predict_TDEST <= Block_proc9_U0_out_stream_predict_TDEST;
    out_stream_predict_TID <= Block_proc9_U0_out_stream_predict_TID;
    out_stream_predict_TKEEP <= Block_proc9_U0_out_stream_predict_TKEEP;
    out_stream_predict_TLAST <= Block_proc9_U0_out_stream_predict_TLAST;
    out_stream_predict_TSTRB <= Block_proc9_U0_out_stream_predict_TSTRB;
    out_stream_predict_TUSER <= Block_proc9_U0_out_stream_predict_TUSER;
    out_stream_predict_TVALID <= Block_proc9_U0_out_stream_predict_TVALID;
    supp_vec_stream_TREADY <= Block_proc9_U0_supp_vec_stream_TREADY;
end behav;
