#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("kernel_in_stream_TDATA", 32, hls_in, 7, "axis", "in_data", 1),
	Port_Property("kernel_in_stream_TVALID", 1, hls_in, 13, "axis", "in_vld", 1),
	Port_Property("kernel_in_stream_TREADY", 1, hls_out, 13, "axis", "in_acc", 1),
	Port_Property("kernel_in_stream_TKEEP", 4, hls_in, 8, "axis", "in_data", 1),
	Port_Property("kernel_in_stream_TSTRB", 4, hls_in, 9, "axis", "in_data", 1),
	Port_Property("kernel_in_stream_TUSER", 4, hls_in, 10, "axis", "in_data", 1),
	Port_Property("kernel_in_stream_TLAST", 1, hls_in, 11, "axis", "in_data", 1),
	Port_Property("kernel_in_stream_TID", 5, hls_in, 12, "axis", "in_data", 1),
	Port_Property("kernel_in_stream_TDEST", 5, hls_in, 13, "axis", "in_data", 1),
	Port_Property("kernel_index_stream_TDATA", 32, hls_in, 14, "axis", "in_data", 1),
	Port_Property("kernel_index_stream_TVALID", 1, hls_in, 20, "axis", "in_vld", 1),
	Port_Property("kernel_index_stream_TREADY", 1, hls_out, 20, "axis", "in_acc", 1),
	Port_Property("kernel_index_stream_TKEEP", 4, hls_in, 15, "axis", "in_data", 1),
	Port_Property("kernel_index_stream_TSTRB", 4, hls_in, 16, "axis", "in_data", 1),
	Port_Property("kernel_index_stream_TUSER", 4, hls_in, 17, "axis", "in_data", 1),
	Port_Property("kernel_index_stream_TLAST", 1, hls_in, 18, "axis", "in_data", 1),
	Port_Property("kernel_index_stream_TID", 5, hls_in, 19, "axis", "in_data", 1),
	Port_Property("kernel_index_stream_TDEST", 5, hls_in, 20, "axis", "in_data", 1),
	Port_Property("kernel_out_stream_TDATA", 32, hls_out, 21, "axis", "out_data", 1),
	Port_Property("kernel_out_stream_TVALID", 1, hls_out, 27, "axis", "out_vld", 1),
	Port_Property("kernel_out_stream_TREADY", 1, hls_in, 27, "axis", "out_acc", 1),
	Port_Property("kernel_out_stream_TKEEP", 4, hls_out, 22, "axis", "out_data", 1),
	Port_Property("kernel_out_stream_TSTRB", 4, hls_out, 23, "axis", "out_data", 1),
	Port_Property("kernel_out_stream_TUSER", 4, hls_out, 24, "axis", "out_data", 1),
	Port_Property("kernel_out_stream_TLAST", 1, hls_out, 25, "axis", "out_data", 1),
	Port_Property("kernel_out_stream_TID", 5, hls_out, 26, "axis", "out_data", 1),
	Port_Property("kernel_out_stream_TDEST", 5, hls_out, 27, "axis", "out_data", 1),
	Port_Property("in_stream_predict_TDATA", 32, hls_in, 28, "axis", "in_data", 1),
	Port_Property("in_stream_predict_TVALID", 1, hls_in, 34, "axis", "in_vld", 1),
	Port_Property("in_stream_predict_TREADY", 1, hls_out, 34, "axis", "in_acc", 1),
	Port_Property("in_stream_predict_TKEEP", 4, hls_in, 29, "axis", "in_data", 1),
	Port_Property("in_stream_predict_TSTRB", 4, hls_in, 30, "axis", "in_data", 1),
	Port_Property("in_stream_predict_TUSER", 4, hls_in, 31, "axis", "in_data", 1),
	Port_Property("in_stream_predict_TLAST", 1, hls_in, 32, "axis", "in_data", 1),
	Port_Property("in_stream_predict_TID", 5, hls_in, 33, "axis", "in_data", 1),
	Port_Property("in_stream_predict_TDEST", 5, hls_in, 34, "axis", "in_data", 1),
	Port_Property("supp_vec_stream_TDATA", 32, hls_in, 35, "axis", "in_data", 1),
	Port_Property("supp_vec_stream_TVALID", 1, hls_in, 41, "axis", "in_vld", 1),
	Port_Property("supp_vec_stream_TREADY", 1, hls_out, 41, "axis", "in_acc", 1),
	Port_Property("supp_vec_stream_TKEEP", 4, hls_in, 36, "axis", "in_data", 1),
	Port_Property("supp_vec_stream_TSTRB", 4, hls_in, 37, "axis", "in_data", 1),
	Port_Property("supp_vec_stream_TUSER", 4, hls_in, 38, "axis", "in_data", 1),
	Port_Property("supp_vec_stream_TLAST", 1, hls_in, 39, "axis", "in_data", 1),
	Port_Property("supp_vec_stream_TID", 5, hls_in, 40, "axis", "in_data", 1),
	Port_Property("supp_vec_stream_TDEST", 5, hls_in, 41, "axis", "in_data", 1),
	Port_Property("dual_coef_stream_TDATA", 32, hls_in, 42, "axis", "in_data", 1),
	Port_Property("dual_coef_stream_TVALID", 1, hls_in, 48, "axis", "in_vld", 1),
	Port_Property("dual_coef_stream_TREADY", 1, hls_out, 48, "axis", "in_acc", 1),
	Port_Property("dual_coef_stream_TKEEP", 4, hls_in, 43, "axis", "in_data", 1),
	Port_Property("dual_coef_stream_TSTRB", 4, hls_in, 44, "axis", "in_data", 1),
	Port_Property("dual_coef_stream_TUSER", 4, hls_in, 45, "axis", "in_data", 1),
	Port_Property("dual_coef_stream_TLAST", 1, hls_in, 46, "axis", "in_data", 1),
	Port_Property("dual_coef_stream_TID", 5, hls_in, 47, "axis", "in_data", 1),
	Port_Property("dual_coef_stream_TDEST", 5, hls_in, 48, "axis", "in_data", 1),
	Port_Property("out_stream_predict_TDATA", 32, hls_out, 49, "axis", "out_data", 1),
	Port_Property("out_stream_predict_TVALID", 1, hls_out, 55, "axis", "out_vld", 1),
	Port_Property("out_stream_predict_TREADY", 1, hls_in, 55, "axis", "out_acc", 1),
	Port_Property("out_stream_predict_TKEEP", 4, hls_out, 50, "axis", "out_data", 1),
	Port_Property("out_stream_predict_TSTRB", 4, hls_out, 51, "axis", "out_data", 1),
	Port_Property("out_stream_predict_TUSER", 4, hls_out, 52, "axis", "out_data", 1),
	Port_Property("out_stream_predict_TLAST", 1, hls_out, 53, "axis", "out_data", 1),
	Port_Property("out_stream_predict_TID", 5, hls_out, 54, "axis", "out_data", 1),
	Port_Property("out_stream_predict_TDEST", 5, hls_out, 55, "axis", "out_data", 1),
	Port_Property("s_axi_CONTROL_BUS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "accelerator_function";
