// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel_matrix_HH_
#define _kernel_matrix_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_matrix_fadfYi.h"
#include "kernel_matrix_fmug8j.h"
#include "kernel_matrix_fexhbi.h"
#include "kernel_matrix_mulibs.h"
#include "kernel_matrix_inpbkb.h"
#include "kernel_matrix_temcud.h"
#include "kernel_matrix_reseOg.h"
#include "kernel_matrix_CONTROL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32>
struct kernel_matrix : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > in_stream_TDATA;
    sc_in< sc_logic > in_stream_TVALID;
    sc_out< sc_logic > in_stream_TREADY;
    sc_in< sc_lv<4> > in_stream_TKEEP;
    sc_in< sc_lv<4> > in_stream_TSTRB;
    sc_in< sc_lv<4> > in_stream_TUSER;
    sc_in< sc_lv<1> > in_stream_TLAST;
    sc_in< sc_lv<5> > in_stream_TID;
    sc_in< sc_lv<5> > in_stream_TDEST;
    sc_out< sc_lv<32> > out_stream_TDATA;
    sc_out< sc_logic > out_stream_TVALID;
    sc_in< sc_logic > out_stream_TREADY;
    sc_out< sc_lv<4> > out_stream_TKEEP;
    sc_out< sc_lv<4> > out_stream_TSTRB;
    sc_out< sc_lv<4> > out_stream_TUSER;
    sc_out< sc_lv<1> > out_stream_TLAST;
    sc_out< sc_lv<5> > out_stream_TID;
    sc_out< sc_lv<5> > out_stream_TDEST;
    sc_in< sc_logic > s_axi_CONTROL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CONTROL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH/8> > s_axi_CONTROL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CONTROL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CONTROL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CONTROL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    kernel_matrix(sc_module_name name);
    SC_HAS_PROCESS(kernel_matrix);

    ~kernel_matrix();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    kernel_matrix_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>* kernel_matrix_CONTROL_BUS_s_axi_U;
    kernel_matrix_inpbkb* input_buf_U;
    kernel_matrix_temcud* temp_buf_U;
    kernel_matrix_temcud* temp2_buf_U;
    kernel_matrix_reseOg* result_buf_U;
    kernel_matrix_fadfYi<1,5,32,32,32>* kernel_matrix_fadfYi_U1;
    kernel_matrix_fmug8j<1,4,32,32,32>* kernel_matrix_fmug8j_U2;
    kernel_matrix_fexhbi<1,9,32,32,32>* kernel_matrix_fexhbi_U3;
    kernel_matrix_mulibs<1,1,11,18,18>* kernel_matrix_mulibs_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<43> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > in_stream_data_V_0_data_out;
    sc_signal< sc_logic > in_stream_data_V_0_vld_in;
    sc_signal< sc_logic > in_stream_data_V_0_vld_out;
    sc_signal< sc_logic > in_stream_data_V_0_ack_in;
    sc_signal< sc_logic > in_stream_data_V_0_ack_out;
    sc_signal< sc_lv<32> > in_stream_data_V_0_payload_A;
    sc_signal< sc_lv<32> > in_stream_data_V_0_payload_B;
    sc_signal< sc_logic > in_stream_data_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_data_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_data_V_0_sel;
    sc_signal< sc_logic > in_stream_data_V_0_load_A;
    sc_signal< sc_logic > in_stream_data_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_data_V_0_state;
    sc_signal< sc_logic > in_stream_data_V_0_state_cmp_full;
    sc_signal< sc_logic > in_stream_dest_V_0_vld_in;
    sc_signal< sc_logic > in_stream_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > in_stream_dest_V_0_state;
    sc_signal< sc_lv<32> > out_stream_data_V_1_data_out;
    sc_signal< sc_logic > out_stream_data_V_1_vld_in;
    sc_signal< sc_logic > out_stream_data_V_1_vld_out;
    sc_signal< sc_logic > out_stream_data_V_1_ack_in;
    sc_signal< sc_logic > out_stream_data_V_1_ack_out;
    sc_signal< sc_lv<32> > out_stream_data_V_1_payload_A;
    sc_signal< sc_lv<32> > out_stream_data_V_1_payload_B;
    sc_signal< sc_logic > out_stream_data_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_data_V_1_sel_wr;
    sc_signal< sc_logic > out_stream_data_V_1_sel;
    sc_signal< sc_logic > out_stream_data_V_1_load_A;
    sc_signal< sc_logic > out_stream_data_V_1_load_B;
    sc_signal< sc_lv<2> > out_stream_data_V_1_state;
    sc_signal< sc_logic > out_stream_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > out_stream_keep_V_1_data_out;
    sc_signal< sc_logic > out_stream_keep_V_1_vld_in;
    sc_signal< sc_logic > out_stream_keep_V_1_vld_out;
    sc_signal< sc_logic > out_stream_keep_V_1_ack_in;
    sc_signal< sc_logic > out_stream_keep_V_1_ack_out;
    sc_signal< sc_logic > out_stream_keep_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_keep_V_1_sel;
    sc_signal< sc_lv<2> > out_stream_keep_V_1_state;
    sc_signal< sc_lv<4> > out_stream_strb_V_1_data_out;
    sc_signal< sc_logic > out_stream_strb_V_1_vld_in;
    sc_signal< sc_logic > out_stream_strb_V_1_vld_out;
    sc_signal< sc_logic > out_stream_strb_V_1_ack_in;
    sc_signal< sc_logic > out_stream_strb_V_1_ack_out;
    sc_signal< sc_logic > out_stream_strb_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_strb_V_1_sel;
    sc_signal< sc_lv<2> > out_stream_strb_V_1_state;
    sc_signal< sc_lv<4> > out_stream_user_V_1_data_out;
    sc_signal< sc_logic > out_stream_user_V_1_vld_in;
    sc_signal< sc_logic > out_stream_user_V_1_vld_out;
    sc_signal< sc_logic > out_stream_user_V_1_ack_in;
    sc_signal< sc_logic > out_stream_user_V_1_ack_out;
    sc_signal< sc_logic > out_stream_user_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_user_V_1_sel;
    sc_signal< sc_lv<2> > out_stream_user_V_1_state;
    sc_signal< sc_lv<1> > out_stream_last_V_1_data_out;
    sc_signal< sc_logic > out_stream_last_V_1_vld_in;
    sc_signal< sc_logic > out_stream_last_V_1_vld_out;
    sc_signal< sc_logic > out_stream_last_V_1_ack_in;
    sc_signal< sc_logic > out_stream_last_V_1_ack_out;
    sc_signal< sc_lv<1> > out_stream_last_V_1_payload_A;
    sc_signal< sc_lv<1> > out_stream_last_V_1_payload_B;
    sc_signal< sc_logic > out_stream_last_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_last_V_1_sel_wr;
    sc_signal< sc_logic > out_stream_last_V_1_sel;
    sc_signal< sc_logic > out_stream_last_V_1_load_A;
    sc_signal< sc_logic > out_stream_last_V_1_load_B;
    sc_signal< sc_lv<2> > out_stream_last_V_1_state;
    sc_signal< sc_logic > out_stream_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > out_stream_id_V_1_data_out;
    sc_signal< sc_logic > out_stream_id_V_1_vld_in;
    sc_signal< sc_logic > out_stream_id_V_1_vld_out;
    sc_signal< sc_logic > out_stream_id_V_1_ack_in;
    sc_signal< sc_logic > out_stream_id_V_1_ack_out;
    sc_signal< sc_logic > out_stream_id_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_id_V_1_sel;
    sc_signal< sc_lv<2> > out_stream_id_V_1_state;
    sc_signal< sc_lv<5> > out_stream_dest_V_1_data_out;
    sc_signal< sc_logic > out_stream_dest_V_1_vld_in;
    sc_signal< sc_logic > out_stream_dest_V_1_vld_out;
    sc_signal< sc_logic > out_stream_dest_V_1_ack_in;
    sc_signal< sc_logic > out_stream_dest_V_1_ack_out;
    sc_signal< sc_logic > out_stream_dest_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_dest_V_1_sel;
    sc_signal< sc_lv<2> > out_stream_dest_V_1_state;
    sc_signal< sc_lv<32> > my_index;
    sc_signal< sc_lv<32> > my_index_0_data_reg;
    sc_signal< sc_logic > my_index_0_vld_reg;
    sc_signal< sc_logic > my_index_0_ack_out;
    sc_signal< sc_lv<32> > length_x;
    sc_signal< sc_lv<32> > length_x_0_data_reg;
    sc_signal< sc_logic > length_x_0_vld_reg;
    sc_signal< sc_logic > length_x_0_ack_out;
    sc_signal< sc_logic > in_stream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > out_stream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<32> > grp_fu_397_p2;
    sc_signal< sc_lv<32> > reg_408;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_lv<18> > tmp_3_fu_414_p1;
    sc_signal< sc_lv<18> > tmp_3_reg_611;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > next_mul_fu_418_p2;
    sc_signal< sc_lv<64> > next_mul_reg_616;
    sc_signal< sc_lv<32> > length_x_read_reg_621;
    sc_signal< sc_lv<32> > i_1_fu_430_p2;
    sc_signal< sc_lv<32> > i_1_reg_631;
    sc_signal< sc_lv<10> > j_1_fu_442_p2;
    sc_signal< sc_lv<10> > j_1_reg_639;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<18> > tmp_10_fu_452_p2;
    sc_signal< sc_lv<18> > tmp_10_reg_644;
    sc_signal< sc_lv<1> > exitcond2_fu_436_p2;
    sc_signal< sc_lv<18> > tmp_s_fu_605_p2;
    sc_signal< sc_lv<18> > tmp_s_reg_649;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<10> > j_2_fu_480_p2;
    sc_signal< sc_lv<10> > j_2_reg_657;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond1_fu_474_p2;
    sc_signal< sc_lv<18> > tmp_12_fu_505_p1;
    sc_signal< sc_lv<18> > tmp_12_reg_667;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<42> > next_mul2_fu_509_p2;
    sc_signal< sc_lv<42> > next_mul2_reg_672;
    sc_signal< sc_lv<32> > i_3_fu_520_p2;
    sc_signal< sc_lv<32> > i_3_reg_680;
    sc_signal< sc_lv<64> > tmp_7_fu_526_p1;
    sc_signal< sc_lv<64> > tmp_7_reg_685;
    sc_signal< sc_lv<1> > exitcond6_fu_515_p2;
    sc_signal< sc_lv<10> > j_3_fu_536_p2;
    sc_signal< sc_lv<10> > j_3_reg_693;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond_fu_530_p2;
    sc_signal< sc_lv<10> > i_4_fu_567_p2;
    sc_signal< sc_lv<10> > i_4_reg_706;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > tmp_i_fu_561_p2;
    sc_signal< sc_lv<32> > temp_buf_q0;
    sc_signal< sc_lv<32> > temp_buf_load_reg_721;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > temp2_buf_q0;
    sc_signal< sc_lv<32> > temp2_buf_load_reg_726;
    sc_signal< sc_lv<32> > grp_fu_392_p2;
    sc_signal< sc_lv<32> > tmp_4_i_reg_731;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<32> > grp_fu_403_p2;
    sc_signal< sc_lv<32> > tmp_2_i_reg_742;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_lv<32> > os_idx_2_fu_584_p2;
    sc_signal< sc_lv<32> > os_idx_2_reg_750;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< bool > ap_block_state41;
    sc_signal< sc_lv<1> > exitcond3_fu_579_p2;
    sc_signal< sc_lv<1> > last_assign_fu_595_p2;
    sc_signal< sc_lv<1> > last_assign_reg_760;
    sc_signal< sc_lv<32> > tmp_fu_600_p1;
    sc_signal< sc_lv<17> > input_buf_address0;
    sc_signal< sc_logic > input_buf_ce0;
    sc_signal< sc_logic > input_buf_we0;
    sc_signal< sc_lv<32> > input_buf_d0;
    sc_signal< sc_lv<32> > input_buf_q0;
    sc_signal< sc_lv<10> > temp_buf_address0;
    sc_signal< sc_logic > temp_buf_ce0;
    sc_signal< sc_logic > temp_buf_we0;
    sc_signal< sc_lv<10> > temp2_buf_address0;
    sc_signal< sc_logic > temp2_buf_ce0;
    sc_signal< sc_logic > temp2_buf_we0;
    sc_signal< sc_lv<7> > result_buf_address0;
    sc_signal< sc_logic > result_buf_ce0;
    sc_signal< sc_logic > result_buf_we0;
    sc_signal< sc_lv<32> > result_buf_q0;
    sc_signal< sc_lv<32> > i_reg_279;
    sc_signal< sc_lv<64> > phi_mul_reg_290;
    sc_signal< sc_lv<10> > j_reg_301;
    sc_signal< sc_lv<1> > tmp_8_fu_424_p2;
    sc_signal< sc_lv<10> > j1_reg_312;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > i2_reg_324;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_lv<42> > phi_mul1_reg_335;
    sc_signal< sc_lv<10> > j3_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > sum_i_reg_358;
    sc_signal< sc_lv<10> > i_i_reg_370;
    sc_signal< sc_lv<32> > os_idx_reg_381;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_466_p1;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_495_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_500_p1;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_551_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_556_p1;
    sc_signal< sc_lv<64> > tmp_3_i_fu_573_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_590_p1;
    sc_signal< sc_lv<32> > grp_fu_392_p0;
    sc_signal< sc_lv<32> > grp_fu_392_p1;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > grp_fu_397_p0;
    sc_signal< sc_lv<32> > grp_fu_397_p1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_lv<18> > tmp_3_cast_fu_448_p1;
    sc_signal< sc_lv<18> > tmp_4_cast_fu_486_p1;
    sc_signal< sc_lv<18> > tmp_11_fu_490_p2;
    sc_signal< sc_lv<18> > tmp_1_cast_fu_542_p1;
    sc_signal< sc_lv<18> > tmp_13_fu_546_p2;
    sc_signal< sc_lv<11> > tmp_s_fu_605_p0;
    sc_signal< sc_lv<18> > tmp_s_fu_605_p1;
    sc_signal< sc_lv<2> > grp_fu_392_opcode;
    sc_signal< sc_lv<43> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<43> ap_ST_fsm_state1;
    static const sc_lv<43> ap_ST_fsm_state2;
    static const sc_lv<43> ap_ST_fsm_state3;
    static const sc_lv<43> ap_ST_fsm_state4;
    static const sc_lv<43> ap_ST_fsm_state5;
    static const sc_lv<43> ap_ST_fsm_state6;
    static const sc_lv<43> ap_ST_fsm_state7;
    static const sc_lv<43> ap_ST_fsm_state8;
    static const sc_lv<43> ap_ST_fsm_state9;
    static const sc_lv<43> ap_ST_fsm_state10;
    static const sc_lv<43> ap_ST_fsm_state11;
    static const sc_lv<43> ap_ST_fsm_state12;
    static const sc_lv<43> ap_ST_fsm_state13;
    static const sc_lv<43> ap_ST_fsm_state14;
    static const sc_lv<43> ap_ST_fsm_state15;
    static const sc_lv<43> ap_ST_fsm_state16;
    static const sc_lv<43> ap_ST_fsm_state17;
    static const sc_lv<43> ap_ST_fsm_state18;
    static const sc_lv<43> ap_ST_fsm_state19;
    static const sc_lv<43> ap_ST_fsm_state20;
    static const sc_lv<43> ap_ST_fsm_state21;
    static const sc_lv<43> ap_ST_fsm_state22;
    static const sc_lv<43> ap_ST_fsm_state23;
    static const sc_lv<43> ap_ST_fsm_state24;
    static const sc_lv<43> ap_ST_fsm_state25;
    static const sc_lv<43> ap_ST_fsm_state26;
    static const sc_lv<43> ap_ST_fsm_state27;
    static const sc_lv<43> ap_ST_fsm_state28;
    static const sc_lv<43> ap_ST_fsm_state29;
    static const sc_lv<43> ap_ST_fsm_state30;
    static const sc_lv<43> ap_ST_fsm_state31;
    static const sc_lv<43> ap_ST_fsm_state32;
    static const sc_lv<43> ap_ST_fsm_state33;
    static const sc_lv<43> ap_ST_fsm_state34;
    static const sc_lv<43> ap_ST_fsm_state35;
    static const sc_lv<43> ap_ST_fsm_state36;
    static const sc_lv<43> ap_ST_fsm_state37;
    static const sc_lv<43> ap_ST_fsm_state38;
    static const sc_lv<43> ap_ST_fsm_state39;
    static const sc_lv<43> ap_ST_fsm_state40;
    static const sc_lv<43> ap_ST_fsm_state41;
    static const sc_lv<43> ap_ST_fsm_state42;
    static const sc_lv<43> ap_ST_fsm_state43;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<42> ap_const_lv42_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_BD4CCCCD;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<64> ap_const_lv64_310;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<42> ap_const_lv42_310;
    static const sc_lv<18> ap_const_lv18_310;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state41();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond1_fu_474_p2();
    void thread_exitcond2_fu_436_p2();
    void thread_exitcond3_fu_579_p2();
    void thread_exitcond6_fu_515_p2();
    void thread_exitcond_fu_530_p2();
    void thread_grp_fu_392_opcode();
    void thread_grp_fu_392_p0();
    void thread_grp_fu_392_p1();
    void thread_grp_fu_397_p0();
    void thread_grp_fu_397_p1();
    void thread_i_1_fu_430_p2();
    void thread_i_3_fu_520_p2();
    void thread_i_4_fu_567_p2();
    void thread_in_stream_TDATA_blk_n();
    void thread_in_stream_TREADY();
    void thread_in_stream_data_V_0_ack_in();
    void thread_in_stream_data_V_0_ack_out();
    void thread_in_stream_data_V_0_data_out();
    void thread_in_stream_data_V_0_load_A();
    void thread_in_stream_data_V_0_load_B();
    void thread_in_stream_data_V_0_sel();
    void thread_in_stream_data_V_0_state_cmp_full();
    void thread_in_stream_data_V_0_vld_in();
    void thread_in_stream_data_V_0_vld_out();
    void thread_in_stream_dest_V_0_ack_out();
    void thread_in_stream_dest_V_0_vld_in();
    void thread_input_buf_address0();
    void thread_input_buf_ce0();
    void thread_input_buf_d0();
    void thread_input_buf_we0();
    void thread_j_1_fu_442_p2();
    void thread_j_2_fu_480_p2();
    void thread_j_3_fu_536_p2();
    void thread_last_assign_fu_595_p2();
    void thread_length_x_0_ack_out();
    void thread_my_index_0_ack_out();
    void thread_next_mul2_fu_509_p2();
    void thread_next_mul_fu_418_p2();
    void thread_os_idx_2_fu_584_p2();
    void thread_out_stream_TDATA();
    void thread_out_stream_TDATA_blk_n();
    void thread_out_stream_TDEST();
    void thread_out_stream_TID();
    void thread_out_stream_TKEEP();
    void thread_out_stream_TLAST();
    void thread_out_stream_TSTRB();
    void thread_out_stream_TUSER();
    void thread_out_stream_TVALID();
    void thread_out_stream_data_V_1_ack_in();
    void thread_out_stream_data_V_1_ack_out();
    void thread_out_stream_data_V_1_data_out();
    void thread_out_stream_data_V_1_load_A();
    void thread_out_stream_data_V_1_load_B();
    void thread_out_stream_data_V_1_sel();
    void thread_out_stream_data_V_1_state_cmp_full();
    void thread_out_stream_data_V_1_vld_in();
    void thread_out_stream_data_V_1_vld_out();
    void thread_out_stream_dest_V_1_ack_in();
    void thread_out_stream_dest_V_1_ack_out();
    void thread_out_stream_dest_V_1_data_out();
    void thread_out_stream_dest_V_1_sel();
    void thread_out_stream_dest_V_1_vld_in();
    void thread_out_stream_dest_V_1_vld_out();
    void thread_out_stream_id_V_1_ack_in();
    void thread_out_stream_id_V_1_ack_out();
    void thread_out_stream_id_V_1_data_out();
    void thread_out_stream_id_V_1_sel();
    void thread_out_stream_id_V_1_vld_in();
    void thread_out_stream_id_V_1_vld_out();
    void thread_out_stream_keep_V_1_ack_in();
    void thread_out_stream_keep_V_1_ack_out();
    void thread_out_stream_keep_V_1_data_out();
    void thread_out_stream_keep_V_1_sel();
    void thread_out_stream_keep_V_1_vld_in();
    void thread_out_stream_keep_V_1_vld_out();
    void thread_out_stream_last_V_1_ack_in();
    void thread_out_stream_last_V_1_ack_out();
    void thread_out_stream_last_V_1_data_out();
    void thread_out_stream_last_V_1_load_A();
    void thread_out_stream_last_V_1_load_B();
    void thread_out_stream_last_V_1_sel();
    void thread_out_stream_last_V_1_state_cmp_full();
    void thread_out_stream_last_V_1_vld_in();
    void thread_out_stream_last_V_1_vld_out();
    void thread_out_stream_strb_V_1_ack_in();
    void thread_out_stream_strb_V_1_ack_out();
    void thread_out_stream_strb_V_1_data_out();
    void thread_out_stream_strb_V_1_sel();
    void thread_out_stream_strb_V_1_vld_in();
    void thread_out_stream_strb_V_1_vld_out();
    void thread_out_stream_user_V_1_ack_in();
    void thread_out_stream_user_V_1_ack_out();
    void thread_out_stream_user_V_1_data_out();
    void thread_out_stream_user_V_1_sel();
    void thread_out_stream_user_V_1_vld_in();
    void thread_out_stream_user_V_1_vld_out();
    void thread_result_buf_address0();
    void thread_result_buf_ce0();
    void thread_result_buf_we0();
    void thread_temp2_buf_address0();
    void thread_temp2_buf_ce0();
    void thread_temp2_buf_we0();
    void thread_temp_buf_address0();
    void thread_temp_buf_ce0();
    void thread_temp_buf_we0();
    void thread_tmp_10_fu_452_p2();
    void thread_tmp_11_fu_490_p2();
    void thread_tmp_12_cast_fu_466_p1();
    void thread_tmp_12_fu_505_p1();
    void thread_tmp_13_cast_fu_495_p1();
    void thread_tmp_13_fu_546_p2();
    void thread_tmp_15_cast_fu_551_p1();
    void thread_tmp_1_cast_fu_542_p1();
    void thread_tmp_1_fu_556_p1();
    void thread_tmp_3_cast_fu_448_p1();
    void thread_tmp_3_fu_414_p1();
    void thread_tmp_3_i_fu_573_p1();
    void thread_tmp_4_cast_fu_486_p1();
    void thread_tmp_4_fu_500_p1();
    void thread_tmp_6_fu_590_p1();
    void thread_tmp_7_fu_526_p1();
    void thread_tmp_8_fu_424_p2();
    void thread_tmp_fu_600_p1();
    void thread_tmp_i_fu_561_p2();
    void thread_tmp_s_fu_605_p0();
    void thread_tmp_s_fu_605_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
